name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-microservices:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies for User Service
        working-directory: ./microservices/user-service
        run: npm ci

      - name: Run tests for User Service
        working-directory: ./microservices/user-service
        run: npm test

      - name: Build User Service
        run: docker compose build user-service

      - name: Install dependencies for AI Service
        working-directory: ./microservices/ai-service
        run: npm ci

      - name: Run tests for AI Service
        working-directory: ./microservices/ai-service
        run: npm test

      - name: Build AI Service
        run: docker compose build ai-service

      - name: Install dependencies for Export Service
        working-directory: ./microservices/export-service
        run: npm ci

      - name: Run tests for Export Service
        working-directory: ./microservices/export-service
        run: npm test

      - name: Build Export Service
        run: docker compose build export-service

      - name: Install dependencies for CV Review Service
        working-directory: ./microservices/cv-review-service
        run: npm ci

      - name: Run tests for CV Review Service
        working-directory: ./microservices/cv-review-service
        run: npm test

      - name: Build CV Review Service
        run: docker compose build cv-review-service

  build-api-gateway:
    runs-on: ubuntu-latest
    needs: build-microservices
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies for API Gateway
        working-directory: ./api-gateway
        run: npm ci

      - name: Run tests for API Gateway
        working-directory: ./api-gateway
        run: npm test

      - name: Build API Gateway
        run: docker compose build api-gateway

  sonarcloud-analysis:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    needs: build-api-gateway
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm ci

      - name: Run SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy-services:
    runs-on: ubuntu-latest
    needs: sonarcloud-analysis
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy services with Docker Compose
        run: docker compose up --build -d

      - name: Check running containers
        run: docker ps
