name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-microservices:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [user-service, ai-service, export-service, cv-review-service]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm ci

      - name: Run tests and generate coverage for ${{ matrix.service }}
        run: |
          cd microservices/${{ matrix.service }}
          npm test

      - name: Build ${{ matrix.service }} Docker image
        run: |
          cd microservices/${{ matrix.service }}
          docker-compose -f docker-compose.yml build

  sonarcloud-analysis:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    needs: build-microservices
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm ci

      - name: Run SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy-services:
    runs-on: ubuntu-latest
    needs: sonarcloud-analysis
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo apt-get install -y docker-compose

      - name: Deploy services with Docker Compose
        run: |
          docker-compose -f docker-compose.yml up --build -d

      - name: Check running containers
        run: docker ps
