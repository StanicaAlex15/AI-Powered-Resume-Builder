# rabbitmq unchanged
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  selector:
    matchLabels:
      app: rabbitmq
  replicas: 1
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3-management
          ports:
            - containerPort: 5672
            - containerPort: 15672
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
spec:
  ports:
    - name: amqp
      port: 5672
      targetPort: 5672
    - name: management
      port: 15672
      targetPort: 15672
  selector:
    app: rabbitmq
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: user-service
          image: ai-powered-resume-builder-user-service
          ports:
            - containerPort: 8081
          env:
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: user-service-secret
                  key: MONGODB_URI
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
spec:
  selector:
    app: user-service
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8082"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: auth-service
          image: ai-powered-resume-builder-auth-service
          ports:
            - containerPort: 8082
          env:
            - name: AUTH0_DOMAIN
              valueFrom:
                secretKeyRef:
                  name: auth-service-secret
                  key: AUTH0_DOMAIN
            - name: AUTH0_AUDIENCE
              valueFrom:
                secretKeyRef:
                  name: auth-service-secret
                  key: AUTH0_AUDIENCE
            - name: AUTH0_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: auth-service-secret
                  key: AUTH0_CLIENT_ID
            - name: AUTH0_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: auth-service-secret
                  key: AUTH0_CLIENT_SECRET
            - name: RABBITMQ_URL
              valueFrom:
                secretKeyRef:
                  name: auth-service-secret
                  key: RABBITMQ_URL
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
spec:
  selector:
    app: auth-service
  ports:
    - protocol: TCP
      port: 8082
      targetPort: 8082
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-service
  template:
    metadata:
      labels:
        app: ai-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8083"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: ai-service
          image: ai-powered-resume-builder-ai-service
          ports:
            - containerPort: 8083
          env:
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: ai-service-secret
                  key: OPENAI_API_KEY
            - name: API_URL
              valueFrom:
                secretKeyRef:
                  name: ai-service-secret
                  key: API_URL
            - name: RABBITMQ_URL
              valueFrom:
                secretKeyRef:
                  name: ai-service-secret
                  key: RABBITMQ_URL
---
apiVersion: v1
kind: Service
metadata:
  name: ai-service
spec:
  selector:
    app: ai-service
  ports:
    - protocol: TCP
      port: 8083
      targetPort: 8083
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: export-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: export-service
  template:
    metadata:
      labels:
        app: export-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8084"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: export-service
          image: ai-powered-resume-builder-export-service
          ports:
            - containerPort: 8084
          env:
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: export-service-secret
                  key: MONGODB_URI
---
apiVersion: v1
kind: Service
metadata:
  name: export-service
spec:
  selector:
    app: export-service
  ports:
    - protocol: TCP
      port: 8084
      targetPort: 8084
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cv-review-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cv-review-service
  template:
    metadata:
      labels:
        app: cv-review-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8085"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: cv-review-service
          image: ai-powered-resume-builder-cv-review-service
          ports:
            - containerPort: 8085
---
apiVersion: v1
kind: Service
metadata:
  name: cv-review-service
spec:
  selector:
    app: cv-review-service
  ports:
    - protocol: TCP
      port: 8085
      targetPort: 8085
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
        - name: api-gateway
          image: ai-powered-resume-builder-api-gateway
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
spec:
  type: ClusterIP
  selector:
    app: api-gateway
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-http
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: a.stanica@student.fontys.nl
    privateKeySecretRef:
      name: letsencrypt-http-private-key
    solvers:
      - http01:
          ingress:
            class: nginx
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ai-resume-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-http"
spec:
  tls:
    - hosts:
        - ai-resume.westeurope.cloudapp.azure.com
      secretName: ai-resume-tls
  rules:
    - host: ai-resume.westeurope.cloudapp.azure.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: api-gateway
                port:
                  number: 80
